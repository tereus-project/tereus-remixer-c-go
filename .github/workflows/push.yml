name: Push workflow

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - linux
        arch:
          - amd64
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.18.0"
      - name: Run build
        run: go build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.18.0"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.18.0"
      - name: Run tests
        run: go test ./... -v

  docker-build-push:
    runs-on: ubuntu-latest
    needs: [build, lint, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Scaleway Container Registry
        uses: docker/login-action@v1
        with:
          registry: rg.fr-par.scw.cloud/tereus
          username: nologin
          password: ${{ secrets.SCW_SECRET_KEY }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            rg.fr-par.scw.cloud/tereus/transpiler-c-go:latest

  deploy:
    name: Deploy app to fly
    needs: [build, lint, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
